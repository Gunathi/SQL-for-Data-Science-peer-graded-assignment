Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562 
iii. Category = 2643
iv. Attribute = 1115 
v. Review = 10000
vi. Checkin = 493
vii. Photo = 10000
viii. Tip = 537
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no
	
	
	SQL code used to arrive at answer: 

		SELECT * 
		FROM user
		WHERE name IS NULL OR 
		      review_count IS NULL OR 
		      yelping_since IS NULL OR 
		      useful IS NULL OR 
		      funny IS NULL OR 
		      cool IS NULL OR 
		      fans IS NULL OR 
		      average_stars IS NULL OR 
	   	      compliment_hot IS NULL OR 
		      compliment_more IS NULL OR 
		      compliment_profile IS NULL OR 
		      compliment_cute IS NULL OR 
		      compliment_list IS NULL OR 
		      compliment_note IS NULL OR 
		      compliment_plain IS NULL OR 
		      compliment_cool IS NULL OR 
		      compliment_funny IS NULL OR 
		      compliment_writer IS NULL OR 
		      compliment_photos IS NULL; 
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max:5		avg: 3.7082 
		
	
	ii. Table: Business, Column: Stars
	
		min: 1.0	max: 5.0	avg: 3.6549 
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0 		max: 2		avg: 0.0144 
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414 
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000	avg: 24.2995 
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

		SELECT city, review_count
		FROM business
		ORDER BY review_count DESC;
	
	
	Copy and Paste the Result Below:

+------------+--------------+
| city       | review_count |
+------------+--------------+
| Las Vegas  |         3873 |
| Montréal   |         1757 |
| Gilbert    |         1549 |
| Las Vegas  |         1410 |
| Las Vegas  |         1389 |
| Las Vegas  |         1252 |
| Las Vegas  |         1116 |
| Las Vegas  |         1084 |
| Las Vegas  |          961 |
| Gilbert    |          902 |
| Las Vegas  |          864 |
| Scottsdale |          823 |
| Las Vegas  |          821 |
| Las Vegas  |          786 |
| Henderson  |          785 |
| Toronto    |          778 |
| Las Vegas  |          768 |
| Las Vegas  |          758 |
| Scottsdale |          726 |
| Cleveland  |          723 |
| Las Vegas  |          720 |
| Charlotte  |          715 |
| Phoenix    |          711 |
| Las Vegas  |          706 |
| Phoenix    |          700 |
+------------+--------------+
(Output limit exceeded, 25 of 10000 total rows shown)
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

	SELECT stars as [Star Rating], count(stars) as [Count]
			FROM business b
			WHERE city = 'Avon'
			GROUP BY stars;


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------------+-------+
| Star Rating | Count |
+-------------+-------+
|         1.5 |     1 |
|         2.5 |     2 |
|         3.5 |     3 |
|         4.0 |     2 |
|         4.5 |     1 |
|         5.0 |     1 |
+-------------+-------+


ii. Beachwood

SQL code used to arrive at answer:

	SELECT stars as [Star Rating], count(stars) as [Count]
			FROM business b
			WHERE city = 'Beachwood'
			GROUP BY stars;


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
		
+-------------+-------+
| Star Rating | Count |
+-------------+-------+
|         2.0 |     1 |
|         2.5 |     1 |
|         3.0 |     2 |
|         3.5 |     2 |
|         4.0 |     1 |
|         4.5 |     2 |
|         5.0 |     5 |
+-------------+-------+


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

		SELECT name, review_count
			FROM user
			ORDER BY review_count DESC
            		LIMIT 3;
	
		
	Copy and Paste the Result Below:

+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+
		

		


8. Does posing more reviews correlate with more fans?
		No

	Please explain your findings and interpretation of the results:

+--------+--------------+------+
| name   | review_count | fans |
+--------+--------------+------+
| Gerald |         2000 |  253 |
| Sara   |         1629 |   50 |
| Yuri   |         1339 |   76 |
+--------+--------------+------+

	Based on the result in the table above, we can see that Gerald has a total of 2000 reviews but only 253 fans.That is an average of 7 fans per review. From considering about Sara, we can see that she has 1629 reviews but only 50 fans. Therefore we can conclude that posing more reviews doesn't correlate with more fans.  

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: More reviews with the word "love"

	
	SQL code used to arrive at answer:

		SELECT (SELECT COUNT(text)
			FROM review
            		WHERE text LIKE '%love%') AS love_text, 
			
			(SELECT COUNT(text)
			 FROM review
                         WHERE text LIKE '%hate%') AS hate_text;
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:

		SELECT name,fans
		FROM user
		ORDER BY fans DESC
		LIMIT 10;
	
	
	Copy and Paste the Result Below:

+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+
		
-----------------------------------------------------------------------------------------------------------------------------

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
	
	Yes, they have different distribution of hours. Starbucks has 11 distribution of hours and Bootleggers Modern American Smokehouse has 15 distribution of hours. 

ii. Do the two groups you chose to analyze have a different number of reviews?

	Yes, the business with 11 hours has 431 reviews but the business with 15 hours has 52 reviews. 
         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

	In my opinion, I think Starbucks business is situated in a good location that many customers can easily arive their. 

SQL code used for analysis:

		SELECT category
,CASE 
WHEN hours like 'Mon%' THEN 1 
WHEN hours like 'Tue%' THEN 2
WHEN hours like 'Wed%' THEN 3 
WHEN hours like 'Thu%' THEN 4 
WHEN hours like 'Fri%' THEN 5 
WHEN hours like 'Sat%' THEN 6 
WHEN hours like 'Sun%' THEN 7
END AS b_no
,name
,hours
,stars
,review_count
,postal_code
FROM business AS b
INNER JOIN category AS c ON b.id = c.business_id
INNER JOIN hours AS h ON b.id = h.business_id
--city = Phoenix  and category = Food
WHERE (city = 'Phoenix' AND category = 'Food') 
AND 
(stars BETWEEN 2 AND 3 OR Stars BETWEEN 4 AND 5)
GROUP BY B_no,stars
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
         
	The business with more reviews are open.
         
ii. Difference 2:
         
	The business with more reviews are open.
         
         
SQL code used for analysis:

		SELECT name, is_open,stars, review_count
 		FROM business
 		ORDER BY review_count DESC;

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
         
	What is the most successful category of business?
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
           
	Among the categories, I calculate the average of stars and the proportion of opening on each category. To get statistical reasoning, I only consider the set of category  with more than 10 business. From the output, we can see that "Local Service", "Health & Medica", "Home Services", "Shopping" and "Beauty & Spas" are successful, They are getting better reviews and higher opening rate. However, "Bars", "Nightlife" and "Restaurants" have lower stars and close frequently.                 
                  
iii. Output of your finished dataset:
         
+------------------------+--------------+-----------+------------+
| category               | num_business | avg_stars | avg_isopen |
+------------------------+--------------+-----------+------------+
| Local Services         |           12 |      4.21 |       0.83 |
| Health & Medical       |           17 |      4.09 |       0.94 |
| Home Services          |           16 |       4.0 |       0.94 |
| Shopping               |           30 |      3.98 |       0.83 |
| Beauty & Spas          |           13 |      3.88 |       0.92 |
| American (Traditional) |           11 |      3.82 |       0.73 |
| Food                   |           23 |      3.78 |       0.87 |
| Bars                   |           17 |       3.5 |       0.65 |
| Nightlife              |           20 |      3.48 |        0.6 |
| Restaurants            |           71 |      3.46 |       0.75 |
+------------------------+--------------+-----------+------------+ 
         
iv. Provide the SQL code you used to create your final dataset:

	SELECT  category.category, 
       		count(business.id) num_business, 
       		round(avg(business.stars),2) avg_stars, 
       		round(avg(business.is_open),2) avg_isopen
	FROM (business INNER JOIN category ON business.id = category.business_id)
	GROUP BY category.category
	HAVING num_business > 10
	ORDER BY avg_stars DESC, avg_isopen DESC;